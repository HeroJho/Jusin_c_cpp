#include "pch.h"

class CObj
{
private:
	int m_iA;
public:
	CObj(int _iA) : m_iA(_iA)
	{
		cout << "인자 하나 생성자" << endl;
	}
	CObj(CObj& rObj)			// 원본에 해당하는 데이터를 사본에 데이터로 복사를 수행
	{
		m_iA = rObj.m_iA;
		cout << "복사 생성자 호출" << endl;
	}

};

// 복사 생성자를 사용해야 하는 이유
// 멤버변수가 많은 클래스 x 100
// 메모리 전체 블록 대 블록으로 복사가 일어난다
//   ㄴ 멤버 변수가 많다면 복사 생성자로 복사하는 것이 좋다

// 고급 디자인 구현에서도 사용이 된다


// 복사 생성자 호출되는 3가지 상황
// 1. 먼저 만든 원본 객체를 사본 객체의 매개변수로 넣어서 객체를 생성하는 경우
// 2. 함수의 매개 변수가 객체 타입인 경우 복사 생성자를 호출
// 3. 함수의 반환타입이 객체 타입인 경우 복사 생성자를 호출 

// 대부분의 함수는 포인터, 래퍼런스 인자로 받거나 반환하기 때문에 2,3의 경우는 잘 없다


// 복사 생성자도 생성자다
// 복사 생성자를 구현했다면 디폴트 생성자도 사라진다.

int main()
{
	CObj obj(50);
	CObj temp(obj);		// 복사 생성자 호출 >> 구현 안하면 디폴트 복사 생성자 호출
}
