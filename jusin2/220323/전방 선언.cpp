#include "pch.h"

// 접근 지시자로 분리하는 기준 >>  엑세스, 가상, 함수 내
// 그냥 느낌적으로~~

void main()
{
	// Player와 Monster 상호참조 문제   >> 메모리 계산에서 문제가 생긴다
	{
		// 포인터를 사용해서 문제를 해결한다
	}
	
	{
		// 헤더파일을 서로 참조하는 것도 상호참조 문제이다

		// 몬스터를 포인터로만 가지고 있으니, 몬스터의 자료형만 알면 된다.  >> 전방 선언

		// - 포인터를 풀면 또 에러 >> 객체는 생성자를 호출해야 한다 >> monster의 정보가 필요! include "monster'
	}

	// 헤더파일은 자료형만 알려주고
	// cpp에서는 객체를 알려준다

	// 헤더를 먼저 읽고, 기능(cpp)를 읽는다


	// 1. 전방 선언 이후, 객체 타입은 멤버 변수로 선언이 불가하여 반드시 포인터 타입으로 선언한다.
	// 2. cpp파일에 헤더파일을 반드시 포함하여 자료형 또는 함수의 호출 권환을 부여할 수 있게 해야 한다.

	// 상호참조가 발생했을 때!!!!!! 이 방법을 사용한다

	//	전방선언을 규칙화하는건 좋은 습관이 아니다.  >> 상호참조는 필요할 때만 하는 거다!!!!!
	//    ㄴ 쓸대없이 헤더에 전방선언 하고, cpp에 헤더파일 추가하지 말라는 말이다!

}



