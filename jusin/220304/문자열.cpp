#include <iostream>

using namespace std;

void main()
{
	// 문자 : 아스키 코드 한 글자, ''묶어서 표현
	// 문자열 : 2바이트 이상의 글자, ""묶어서 표현 ㄱ, ㄴ, ㄷ은(알파벳 빼고) 유니코드로 2바이트 >> 문자열
	// 문자를 여러개 저장하려면 char배열이 필요하다.

	// char cName[5] = { 'j', 'u', 's', 'i', 'n' };    // 배열 초기화

	char cName[6] = "jusin";  // 오버플로우!   // 문자열 초기화
	// ㄴ'\0' = null문자 문자열 끝에 붙는다. 문자열 끝을 알려주는 기호

	cout << cName << endl; // cout의 행동 때문에 주소를 넣어도 그냥 출력됨

	// 배열 초기화를 cout에 넣으면 null문자가 없어서 어디까지가 문자열 끝인지 알 수 없어 쓰래기 값이 나옴
	// 그러니 문자열을 배열 초기화로 사용하지 않는다  >> 불편하다!
	

	// 문자열 상수
	char szName[128] = "";
	cout << "글자 입력: ";
	cin >> szName;
	cout << szName << endl; // 배열로 입력 받는건 한계가 있다

	const char* ss = "동해물과 백두산이";   // << 문자열 상수 / 포인터를 사용한 방법을 사용한다
	cout << ss << endl;

	for (int i = 0; '\0' != ss[i]; i++)
	{
		cout << ss[i];
	}

	// ss[2] = 'A'; // 상수이기 때문에 불가능

	// 문자열 상수 포인터 배열
	const char* pArray[3] = { "jusin", "game", "academy" };

	// 문자 배열과 문자열 상수의 차이점
	// 둘 다 문자열의 시작 주소를 갖고 있따는 측면은 동일
	// 문자 배열의 경우 글자 하나하나를 배열의 원소로 담음
	// 문자 배열의 이름은 const가 * 뒤에 붙은 경우와 동일 (int* const p)와 동일

	// 문자열 상수는 데이터 영역에 등록된 문자열의 시작 주소를 담고 있따.

}


// 숙제 :
// 1.
//	- 5 * 5 배열 0~24까지 출력
//	- 2(아래) 4(왼쪽) 6(오른쪽) 8(위쪽)으로 숫자 0을 이동
// 2.문자열을 입력 받아 null문자를 제외한 순수 문자열 길이를 구하는 함수를 만들어라(strlen 사용 금지)
// 3. 입력 받은 문자열을 뒤집는 함수 만들기
// 4. 3명의 입력 가능한 성적표 만들기 프로그램 만들기 (이름, 국어, 영어, 수학, 총점, 평균 데이터 저장) (구조체X)
//        ㄴ1. 입력 2. 전체 출력 3. 검색 출력(이름) 4. 종료